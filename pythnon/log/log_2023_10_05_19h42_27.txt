model           = gpt-3.5-turbo
temperature     = 0.0
max_len_message = 600
channels        = [-1001842901217, -1001905441409, -1001863996867, -1001944316671, -1001919265899]

0  positive author attitude
1  the message is advantageous for the actual political power
2  exaggerations
3  lack of object concordance
4  appeal to the intellect
5  appeal to emotions
6  appeal to virtues
7  appeal to ethics
8  appeal to blinding generalities as fatherland, peace, glory, justice, honor
9  appeal to fear
10 appeal to the threat from other countries
11 appeal to hatred
12 appeal to authority
13 appeal to human rights
14 criticism of the actual political power
15 generalizations
16 seemingly scientific appearance, but only seemingly
17 real scientific proofs of the information
18 real proofs of the information
19 euphemismes replacing offensive expressions
20 euphemismes replacing war or victims
21 formal register of the texte
22 eupbeneficiaries of the information regarding to politics
23 flattery to the reader
24 dilemma between only two possibilities
25 criticisme of a person instead of criticism of his arguments
26 underestimation of the proofs of the opponents

calc_affirmations
prompt =                 Please generate binary affirmations from the provided news message:

                'abc'

                For each affirmation:

                1. Extract key assertions from the message. 
                2. Convert negations into their positive counterparts.
                3. Each affirmation must be standalone and provide full context. If there's an attributed source in the message, ensure it's included in the affirmation.
                4. Provide a truth value for each affirmation based on its accuracy within the message.

                The result should be in this format:
                {
                    'Binary affirmation 1': true/false,
                    'Binary affirmation 2': true/false,
                    ...
                }

                Ensure that each binary affirmation is concise, clear, and independent. They should almost function as a unique hash of the information they contain.

                For example. Here I provide examples already checked by gpt-4, with corrections = result that should appear instead, or close to it. You need understand what I mean with these examples and strictly follow :
{
    'Binary affirmation 1': True,
    'Binary affirmation 2': False,
    'Binary affirmation 3': True,
    'Binary affirmation 4': True,
    'Binary affirmation 5': False
}
